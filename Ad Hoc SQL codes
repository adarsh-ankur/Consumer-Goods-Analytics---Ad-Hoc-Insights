/*1. Provide the list of markets in which the customer "Atliq Exclusive" operates its
business in the APAC region.*/

SELECT DISTINCT market 
FROM dim_customer
WHERE customer = 'Atliq Exclusive'
AND region = 'APAC'
ORDER BY market;

/*1. Provide the list of markets in which the customer "Atliq Exclusive" operates its
business in the APAC region.*/

WITH cte AS (
    SELECT 
        COUNT(DISTINCT CASE WHEN fiscal_year = 2020 THEN product_code END) AS unique_products_2020,
        COUNT(DISTINCT CASE WHEN fiscal_year = 2021 THEN product_code END) AS unique_products_2021
    FROM fact_sales_monthly
)
SELECT *,
    ROUND((unique_products_2021 - unique_products_2020) * 100 / unique_products_2020, 2) AS percentage_chg
FROM cte;

/*3. Provide a report with all the unique product counts for each segment and
sort them in descending order of product counts. The final output contains
2 fields,
segment
product_count*/

SELECT segment, COUNT(product_code) AS product_count  
FROM dim_product
GROUP BY segment
ORDER BY product_count DESC;

/*4. Follow-up: Which segment had the most increase in unique products in
2021 vs 2020? The final output contains these fields,
segment
product_count_2020
product_count_2021
difference*/

WITH product_count AS (
    SELECT segment,
        COUNT(DISTINCT CASE WHEN fiscal_year = 2020 THEN fsm.product_code END) AS product_count_2020,
        COUNT(DISTINCT CASE WHEN fiscal_year = 2021 THEN fsm.product_code END) AS product_count_2021  
    FROM dim_product dp
    JOIN fact_sales_monthly fsm
        ON dp.product_code = fsm.product_code
    GROUP BY segment
)
SELECT *,
    product_count_2021 - product_count_2020 AS difference
FROM product_count
ORDER BY difference DESC;

/*5. Get the products that have the highest and lowest manufacturing costs.
The final output should contain these fields,
product_code
product
manufacturing_cost*/

SELECT p.product_code, p.product, manufacturing_cost
FROM dim_product p
JOIN fact_manufacturing_cost fmc
    ON p.product_code = fmc.product_code
WHERE manufacturing_cost = (SELECT MAX(manufacturing_cost) FROM fact_manufacturing_cost) 
   OR manufacturing_cost = (SELECT MIN(manufacturing_cost) FROM fact_manufacturing_cost);

/*6. Generate a report which contains the top 5 customers who received an
average high pre_invoice_discount_pct for the fiscal year 2021 and in the
Indian market. The final output contains these fields,
customer_code
customer
average_discount_percentage*/

SELECT dm.customer_code, dm.customer, fpind.pre_invoice_discount_pct
FROM dim_customer dm
JOIN fact_pre_invoice_deductions fpind 
    ON dm.customer_code = fpind.customer_code
WHERE fiscal_year = 2021
AND market = 'India'
AND pre_invoice_discount_pct > (SELECT AVG(pre_invoice_discount_pct) FROM fact_pre_invoice_deductions)
ORDER BY pre_invoice_discount_pct DESC
LIMIT 5;

/*7. Get the complete report of the Gross sales amount for the customer “Atliq
Exclusive” for each month. This analysis helps to get an idea of low and
high-performing months and take strategic decisions.
The final report contains these columns:
Month
Year
Gross sales Amount*/

SELECT 
    MONTHNAME(date) AS month, 
    fsm.fiscal_year,
    ROUND(SUM(sold_quantity * gross_price), 2) AS Gross_sales_Amount
FROM fact_sales_monthly fsm 
JOIN dim_customer dm
    ON fsm.customer_code = dm.customer_code
JOIN fact_gross_price fgp
    ON fsm.product_code = fgp.product_code
    AND fsm.fiscal_year = fgp.fiscal_year
WHERE customer = 'Atliq Exclusive'
GROUP BY month, fsm.fiscal_year
ORDER BY fsm.fiscal_year;

/*8. In which quarter of 2020, got the maximum total_sold_quantity? The final
output contains these fields sorted by the total_sold_quantity,
Quarter
total_sold_quantity*/

SELECT
    CASE    
        WHEN MONTH(date) IN (9,10,11) THEN 'Q1'
        WHEN MONTH(date) IN (12,1,2) THEN 'Q2'
        WHEN MONTH(date) IN (3,4,5) THEN 'Q3'
        ELSE 'Q4'
    END AS Quarter,
    SUM(sold_quantity) AS total_sold_quantity
FROM fact_sales_monthly
WHERE fiscal_year = 2020
GROUP BY Quarter
ORDER BY total_sold_quantity DESC;

/*9. Which channel helped to bring more gross sales in the fiscal year 2021
and the percentage of contribution? The final output contains these fields,
channel
gross_sales_mln
percentage*/

WITH sales_by_channel AS (
    SELECT channel,
        SUM(sold_quantity * gross_price) AS Gross_sales_Amount
    FROM fact_sales_monthly fsm 
    JOIN dim_customer dm
        ON fsm.customer_code = dm.customer_code
    JOIN fact_gross_price fgp
        ON fsm.product_code = fgp.product_code
        AND fsm.fiscal_year = fgp.fiscal_year
    WHERE fsm.fiscal_year = 2021
    GROUP BY channel
)
SELECT 
    channel,
    ROUND(Gross_sales_Amount / 1000000, 2) AS gross_sales_mln,
    ROUND((Gross_sales_Amount * 100.0) / SUM(Gross_sales_Amount) OVER (), 2) AS percentage
FROM sales_by_channel;

/*10. Get the Top 3 products in each division that have a high
total_sold_quantity in the fiscal_year 2021? The final output contains these
fields,
division
product_code
product
total_sold_quantity
rank_order*/ 

WITH product_sales AS (
    SELECT 
        dp.division, 
        fsm.product_code, 
        dp.product, 
        SUM(fsm.sold_quantity) AS total_sold_quantity,
        RANK() OVER (PARTITION BY dp.division ORDER BY SUM(fsm.sold_quantity) DESC) AS rank_order
    FROM fact_sales_monthly fsm 
    JOIN dim_product dp ON fsm.product_code = dp.product_code
    WHERE fsm.fiscal_year = 2021
    GROUP BY dp.division, fsm.product_code, dp.product
)
SELECT division, product_code, product, total_sold_quantity, rank_order
FROM product_sales
WHERE rank_order <= 3
ORDER BY division, rank_order;

